<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<style>
canvas {
    border:1px solid #d3d3d3;
    background-color: #f1f1f1;
}
</style>
</head>
<body onload="startGame()">
<script>

var myGamePiece;
var myBackground;
var myObstacles = [];

function startGame() {
  myGamePiece = new component(50, 60, "sheep.gif", 10, 155, "image");
  myGamePiece.gravity = 0.5;
  myObstacle = new component(10, 200, "white", 300, 120);
  myBackground = new component(656, 270, "8-bit-nature-lu.jpg", 0, 0, "background");
  myScore = new component("30px", "Consolas", "black", 280, 40, "text");
  myGameArea.start();
}

var myGameArea = {
  canvas : document.createElement("canvas"),
  start : function() {
    this.canvas.width = 480;
    this.canvas.height = 270;
    this.context = this.canvas.getContext("2d");
    document.body.insertBefore(this.canvas, document.body.childNodes[0]);
    this.frameNo = 0;
    this.interval = setInterval(updateGameArea, 20);
    window.addEventListener('keydown', function (e) {
      myGameArea.key = e.keyCode;
    })
    window.addEventListener('keyup', function (e) {
     myGameArea.key = false;
    })
  },

  clear : function() {
    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
  },

  stop : function() {
    clearInterval(this.interval);
  }
}

function everyinterval(n) {
  if ((myGameArea.frameNo / n) % 1 == 0) {return true;}
  return false;
}

function component(width, height, color, x, y, type) {
  this.type = type;
  if (type == "image" || type == "background") {
    this.image = new Image();
    this.image.src = color;
  }
  this.width = width;
  this.height = height;
  this.speedX = 0;
  this.speedY = 0;
  this.gravity = 0;
  this.gravitySpeed = 0;
  this.x = x;
  this.y = y;

  this.update = function() {
    ctx = myGameArea.context;

    if (this.type == "text") {
     ctx.font = this.width + " " + this.height;
     ctx.fillStyle = color;
     ctx.fillText(this.text, this.x, this.y);
    }

    if (type == "image" || type == "background") {
      ctx.drawImage(this.image,
                    this.x,
                    this.y,
                    this.width, this.height);
      if (type == "background") {
       ctx.drawImage(this.image,
                    this.x + this.width,
                    this.y,
                    this.width, this.height);
      }
    } else {
      ctx.fillStyle = color;
      ctx.fillRect(this.x, this.y, this.width, this.height);
    }
  }

  this.newPos = function() {
    this.gravitySpeed += this.gravity;
    this.x += this.speedX;
    this.y += this.speedY + this.gravitySpeed;
    if (this.type == "background") {
      if (this.x == -(this.width)) {
        this.x = 0;
      }
    }
    this.hitBottom();
    this.hitTop();
  }

  this.hitBottom = function(){
    if(this.y > 155){
      this.y = 155;
      this.gravitySpeed = 0;
    }
  }

  this.hitTop = function(){
    if(this.y <= 0){
      this.y = 0;
      myGamePiece.gravity = 1.5;
    }
  }

  this.crashWith = function(otherobj) {
    var myleft = this.x;
    var myright = this.x + (this.width);
    var mytop = this.y;
    var mybottom = this.y + (this.height);
    var otherleft = otherobj.x;
    var otherright = otherobj.x + (otherobj.width);
    var othertop = otherobj.y;
    var otherbottom = otherobj.y + (otherobj.height);
    var crash = true;
    if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
      crash = false;
    }
    return crash;
  }

}

function updateGameArea() {
  var x, y;
  for (i = 0; i < myObstacles.length; i += 1) {
    if (myGamePiece.crashWith(myObstacles[i])) {
      myGameArea.stop();
      return;
    }
  }
  myGameArea.clear();
  myGamePiece.image.src = "sheep.gif";
  myGameArea.frameNo += 1;
  if (myGameArea.frameNo == 1 || everyinterval(200)) {
    x = myGameArea.canvas.width;
    minHeight = 150;
    maxHeight = 200;
    height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
    //minGap = 100;
    //maxGap = 200;
    //gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
    //myObstacles.push(new component(10, height, "white", x, 0));
    myObstacles.push(new component(10, x - height , "white", x, height ));
  }

  myBackground.speedX = -1;
  myBackground.newPos();
  myBackground.update();
  myGamePiece.gravity = 0.6;
  if (myGameArea.key && myGameArea.key == 32) {
    moveup(this.y);
  }
  if(myGameArea.frameNo<420){
    myScore.text="SCORE: "+0;
  }else{
    myScore.text="SCORE: " + Math.round(((myGameArea.frameNo+50)/200)-2);
  }
  myScore.update();
  for (i = 0; i < myObstacles.length; i += 1) {
    myObstacles[i].x += -1;
    myObstacles[i].update();
  }
  //myGameArea.clear();
  //myBackground.speedX = -1;
  //myBackground.newPos();
  //myBackground.update();
  //myObstacle.x += -1;
  //myObstacle.update();

  myGamePiece.newPos();
  myGamePiece.update();
}

function moveup(y){
  myGamePiece.image.src = "jumping sheep.gif";
  accelerate(-0.9);
}

function accelerate(n){
  if(!myGameArea.interval){
    myGameArea.interval = setInterval(updateGameArea,20);
  }
  myGamePiece.gravity = n;
}

</script>

<p>Use the spacebar to jump and try to get a high score!</p>
</body>
</html>
